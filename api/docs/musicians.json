{
  "openapi": "3.0.0",
  "info": {
    "title": "Musicians API",
    "description": "API for the Musicians platform.",
    "version": "0.0.2"
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "components": {
    "schemas": {
      "LoginForm": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "email of the user"
          },
          "password": {
            "type": "string",
            "description": "password of the user."
          }
        }
      },
      "RegisterForm": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "description": "email of the user"
          },
          "password": {
            "type": "string",
            "description": "password of the user. Must be at least 8 characters long and contain lowercase, uppercase and special letters."
          }
        }
      },
      "Band": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "auto-generated id"
          },
          "name": {
            "type": "string",
            "description": "Name of the band."
          },
          "location": {
            "type": "string",
            "description": "Location where the band is from."
          },
          "fansCount": {
            "type": "integer",
            "description": "Amount of fans the band has."
          },
          "groupiesCount": {
            "type": "integer",
            "description": "Amount of groupies the band has."
          },
          "products": {
            "type": "object",
            "description": "Array of products the band has uploaded."
          }
        }
      },
      "CreateBandDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the band."
          },
          "location": {
            "type": "string",
            "description": "Location where the band is from."
          }
        }
      },
      "UpdateBandDto": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the band."
          },
          "location": {
            "type": "string",
            "description": "Location where the band is from."
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "auto-generated id."
          },
          "roleName": {
            "type": "string",
            "description": "id of the role the user has."
          },
          "username": {
            "type": "string",
            "description": "Username of the user."
          },
          "email": {
            "type": "string",
            "description": "Email of the user."
          },
          "picture": {
            "type": "string",
            "description": "Just a string for now. But not implemented yet. Please ignore."
          },
          "products": {
            "type": "object",
            "description": "Products the user has bought so far."
          }
        }
      },
      "Sound": {
        "type": "object",
        "required": [
          "name",
          "owner",
          "file"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "auto-generated id"
          },
          "name": {
            "type": "string",
            "description": "name of the sound."
          },
          "owner": {
            "type": "string",
            "description": "Owner of the sound, which is a band."
          },
          "file": {
            "type": "string",
            "description": "Just a string for. But not implemented yet. Please ignore."
          }
        }
      },
      "CreateSoundDto": {
        "type": "object",
        "required": [
          "name",
          "owner",
          "file"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the sound."
          },
          "owner": {
            "type": "string",
            "description": "Owner of the sound, which is a band."
          },
          "file": {
            "type": "string",
            "description": "Just a string for. But not implemented yet. Please ignore."
          }
        }
      },
      "UpdateSoundDto": {
        "type": "object",
        "required": [
          "name",
          "owner",
          "file"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "name of the sound."
          },
          "owner": {
            "type": "string",
            "description": "Owner of the sound, which is a band."
          },
          "file": {
            "type": "string",
            "description": "Just a string for. But not implemented yet. Please ignore."
          }
        }
      },
      "Goal": {
        "type": "object",
        "required": [
          "name",
          "amountToAchieve"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "auto-generated id"
          },
          "name": {
            "type": "string",
            "description": "Name of the goal."
          },
          "amountToAchieve": {
            "type": "integer",
            "description": "Amount to achieve for the goal to be met."
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "price"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "auto-generated id"
          },
          "sound": {
            "type": "integer",
            "description": "Id of the sound of this product."
          },
          "price": {
            "type": "integer",
            "description": "Price of the product."
          },
          "product": {
            "type": "object",
            "description": "The parent product object."
          }
        }
      },
      "Transaction": {
        "description": "NO IMPLEMENTATION YET. PLEASE IGNORE",
        "type": "object",
        "required": [
          "amount",
          "recipient",
          "sender"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "auto-generated id"
          },
          "amount": {
            "type": "integer",
            "description": "Amount of the transaction."
          },
          "recipient": {
            "type": "string",
            "description": "Recipient of the transaction."
          },
          "sender": {
            "type": "string",
            "description": "Sender of the transaction."
          },
          "product": {
            "type": "string",
            "description": "product linked to the transaction."
          }
        }
      }
    }
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Login user and get access token",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Token to access the rest of the API."
                    },
                    "user_details": {
                      "type": "object",
                      "description": "Object of the user that logged in."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "tags": [
          "Authentication"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterForm"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Registration succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/bands": {
      "get": {
        "summary": "Get all bands",
        "tags": [
          "Bands"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new band",
        "tags": [
          "Bands"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Band"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The band was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          }
        }
      }
    },
    "/bands/{id}": {
      "get": {
        "summary": "Get a band by id",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "responses": {
          "200": {
            "description": "The band was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          },
          "404": {
            "description": "No band with the given id was found."
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a band",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Band"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The band was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a band",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "responses": {
          "200": {
            "description": "The band was deleted successfully."
          }
        }
      }
    },
    "/bands/{id}/products": {
      "post": {
        "summary": "Add a new product",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Band"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all products of a band.",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "responses": {
          "201": {
            "description": "The products were retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear all products of a band.",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          }
        ],
        "responses": {
          "201": {
            "description": "The products were cleared successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/bands/{id}/products/{productid}": {
      "get": {
        "summary": "Get a product from a band.",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          },
          {
            "in": "path",
            "name": "productid",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product to delete."
          }
        ],
        "responses": {
          "201": {
            "description": "The product was retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a product from a band.",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          },
          {
            "in": "path",
            "name": "productid",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product to delete."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The product was retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Bands"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the band"
          },
          {
            "in": "path",
            "name": "productid",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product to delete."
          }
        ],
        "responses": {
          "201": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by id",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "No user with the given id was found."
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was deleted successfully."
          }
        }
      }
    },
    "/users/{id}/products": {
      "post": {
        "summary": "Buy a new product",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get all products of a user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "responses": {
          "201": {
            "description": "The products were retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Clear all products of a user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "responses": {
          "201": {
            "description": "The products were cleared successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/products/{productid}": {
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          },
          {
            "in": "path",
            "name": "productid",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product to delete."
          }
        ],
        "responses": {
          "201": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/roles": {
      "patch": {
        "summary": "add a role to a user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "Can only be 'Musician'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role was added successfully."
          }
        }
      },
      "delete": {
        "summary": "delete a role from a user.",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "Can only be 'Musician'"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The role was deleted successfully."
          }
        }
      }
    },
    "/sounds": {
      "get": {
        "summary": "Get all sounds.",
        "tags": [
          "Sounds"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sound"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new sound",
        "tags": [
          "Sounds"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sound"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The sound was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sound"
                }
              }
            }
          }
        }
      }
    },
    "/sounds/{id}": {
      "get": {
        "summary": "Get a sound by id",
        "tags": [
          "Sounds"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the sound"
          }
        ],
        "responses": {
          "200": {
            "description": "The sound was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sound"
                }
              }
            }
          },
          "404": {
            "description": "No sound with the given id was found."
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a sound",
        "tags": [
          "Sounds"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Sound"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The user was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sound"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a sound",
        "tags": [
          "Sounds"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "The user was deleted successfully."
          }
        }
      }
    },
    "/goals": {
      "get": {
        "summary": "Get all goals.",
        "tags": [
          "Goals"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new goal",
        "tags": [
          "Goals"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The goal was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "403": {
            "description": "Bad request. The given input does not match the expected input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          }
        }
      }
    },
    "/goals/{id}": {
      "get": {
        "summary": "Get a goal by id",
        "tags": [
          "Goals"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the goal"
          }
        ],
        "responses": {
          "200": {
            "description": "The goal was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          },
          "404": {
            "description": "No goal with the given id was found."
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a goal",
        "tags": [
          "Goals"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the goal"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Goal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The goal was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Goal"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a goal",
        "tags": [
          "Goals"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the goal"
          }
        ],
        "responses": {
          "200": {
            "description": "The goal was deleted successfully."
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products.",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new product",
        "tags": [
          "Products"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "401": {
            "description": "Incorrect input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Get a product by id",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product"
          }
        ],
        "responses": {
          "200": {
            "description": "The product was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          },
          "404": {
            "description": "No product with the given id was found."
          }
        }
      },
      "patch": {
        "summary": "Update the properties of a product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The product was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a product",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the product"
          }
        ],
        "responses": {
          "200": {
            "description": "The product was deleted successfully."
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "summary": "Get all transaction.",
        "tags": [
          "Transactions"
        ],
        "responses": {
          "200": {
            "description": "Retrieval succesful.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new transaction",
        "tags": [
          "Transactions"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Transaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The transaction was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Get a transaction by id",
        "tags": [
          "Transactions"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "integer"
            },
            "required": true,
            "description": "Identifier of the transaction"
          }
        ],
        "responses": {
          "200": {
            "description": "The transaction was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "404": {
            "description": "No transaction with the given id was found."
          }
        }
      }
    }
  }
}